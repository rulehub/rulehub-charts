name: Governance Verify

on:
  pull_request:
    paths:
      - "values.yaml"
      - "Chart.yaml"
      - "files/**"
      - "templates/**"
      - "hack/**"
      - ".github/workflows/governance-verify.yml"
  # Temporary: run on push to main for visibility
  push:
    branches: [main]
    paths:
      - "values.yaml"
      - "Chart.yaml"
      - "files/**"
      - "templates/**"
      - "hack/**"
      - ".github/workflows/governance-verify.yml"
  workflow_dispatch:
    inputs:
      freeze_ref:
        description: "Git ref (tag or commit) marking freeze baseline for verification"
        required: false
        default: ""
      allow_critical:
        description: "Allow critical fixes (requires commit message with [critical-fix])"
        required: false
        default: "false"
      allow_hack:
        description: "Allow hack/ script changes during freeze"
        required: false
        default: "false"
      ci_image_tag:
        description: "Optional explicit CI image tag; otherwise repository variable CI_IMAGE_TAG must be set."
        required: false
        default: ""

permissions:
  contents: read
jobs:
  check-tag:
    name: Ensure CI image tag
    runs-on: ubuntu-latest
    outputs:
      resolved_tag: ${{ steps.ctag.outputs.resolved_tag }}
    steps:
      - name: Checkout repository (required for local actions)
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Resolve CI image tag
        id: ctag
        env:
          CI_IMAGE_TAG: ${{ vars.CI_IMAGE_TAG }}
        run: bash hack/ci-tag-resolve.sh '${{ inputs.ci_image_tag }}'
  underscore-gate:
    name: Underscore Gate
    runs-on: ubuntu-latest
    needs: [check-tag]
    container:
      image: "ghcr.io/${{ github.repository_owner }}/ci-charts:${{ needs.check-tag.outputs.resolved_tag }}"
      options: --user 0:0
    # act schema is strict; simplify condition: run on PRs and pushes; actor-based skip handled per-job if needed
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Run underscore gate (diff vs base)
        run: |
          bash hack/verify-underscore-gate.sh --base origin/${{ github.base_ref || 'main' }} || exit 1

  deprecation-window:
    name: Deprecation Window
    runs-on: ubuntu-latest
    needs: [check-tag]
    container:
      image: "ghcr.io/${{ github.repository_owner }}/ci-charts:${{ needs.check-tag.outputs.resolved_tag }}"
      options: --user 0:0
    env:
      IS_ACT: "false"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Detect ACT environment
        run: bash hack/act-detect.sh
      - name: Ensure jq and yq present
        if: ${{ env.IS_ACT != 'true' }}
        run: |
          set -e
          command -v jq >/dev/null 2>&1 || { echo 'jq not found in ci-charts image'; exit 1; }
          command -v yq >/dev/null 2>&1 || { echo 'yq not found in ci-charts image'; exit 1; }
      - name: Verify deprecation window
        if: ${{ env.IS_ACT != 'true' }}
        env:
          EVENT_NAME: ${{ github.event_name }}
          BASE_REF: ${{ github.base_ref || 'main' }}
        run: bash hack/ci/deprecation-window-run.sh
      - name: ACT skip note (deprecation-window)
        if: ${{ env.IS_ACT == 'true' }}
        run: echo 'Skipping deprecation-window under ACT (yq/jq not available in dev-local image).'

  soft-deletion:
    name: Soft Deletion Stubs
    runs-on: ubuntu-latest
    needs: [check-tag]
    container:
      image: "ghcr.io/${{ github.repository_owner }}/ci-charts:${{ needs.check-tag.outputs.resolved_tag }}"
      options: --user 0:0
    env:
      IS_ACT: "false"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Detect ACT environment
        run: bash hack/act-detect.sh
      - name: Ensure yq present
        if: ${{ env.IS_ACT != 'true' }}
        run: |
          set -e
          command -v yq >/dev/null 2>&1 || { echo 'yq not found in ci-charts image'; exit 1; }
      - name: Verify soft deletion lifecycle
        if: ${{ env.IS_ACT != 'true' }}
        run: bash hack/verify-soft-deletion.sh
      - name: ACT skip note (soft-deletion)
        if: ${{ env.IS_ACT == 'true' }}
        run: echo 'Skipping soft-deletion under ACT (yq not available in dev-local image).'

  id-annotation:
    name: ID Annotation
    runs-on: ubuntu-latest
    needs: [check-tag]
    container:
      image: "ghcr.io/${{ github.repository_owner }}/ci-charts:${{ needs.check-tag.outputs.resolved_tag }}"
      options: --user 0:0
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Verify rulehub.id annotations
        run: bash hack/verify-id-annotation.sh

  size:
    name: Size Budget
    runs-on: ubuntu-latest
    needs: [check-tag]
    container:
      image: "ghcr.io/${{ github.repository_owner }}/ci-charts:${{ needs.check-tag.outputs.resolved_tag }}"
      options: --user 0:0
    env:
      IS_ACT: "false"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Detect ACT environment
        shell: bash
        run: |
          if [ -n "${ACT:-}" ]; then
            echo "IS_ACT=true" >> "$GITHUB_ENV"
          fi
      - name: Verify rendered size (<= 250KB default)
        if: ${{ env.IS_ACT != 'true' }}
        run: |
          if [ -n "${ACT:-}" ]; then
            echo 'Skipping size verification under ACT.'
            exit 0
          fi
          bash hack/verify-size.sh

  freeze:
    name: Freeze (label or manual)
    runs-on: ubuntu-latest
    # act-compatible: skip under act; GitHub semantics enforced inside step logic
    if: ${{ github.actor != 'nektos/act' }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0
      - name: Determine freeze ref
        id: params
        env:
          INPUT_REF: ${{ inputs.freeze_ref }}
          EVENT_NAME: ${{ github.event_name }}
          LABELS_CSV: ${{ join(github.event.pull_request.labels.*.name, ',') }}
        run: bash hack/ci/freeze-determine-ref.sh
      - name: Run freeze verification
        if: steps.params.outputs.skip != 'true'
        run: |
          ref='${{ steps.params.outputs.ref }}'
          echo "Freeze baseline: $ref"
          args=(--ref "$ref")
          if [ '${{ inputs.allow_critical }}' = 'true' ]; then args+=(--allow-critical); fi
            if [ '${{ inputs.allow_hack }}' = 'true' ]; then args+=(--allow-hack); fi
          bash hack/verify-freeze.sh "${args[@]}"

  summary:
    name: Summary
    runs-on: ubuntu-latest
    needs:
      [underscore-gate, deprecation-window, soft-deletion, id-annotation, size]
    if: always()
    steps:
      - name: Report
        run: |
          echo 'Governance verification complete.'
          echo 'Jobs status:'
          echo ' - Underscore gate: ${{ needs.underscore-gate.result }}'
          echo ' - Deprecation window: ${{ needs.deprecation-window.result }}'
          echo ' - Soft deletion: ${{ needs.soft-deletion.result }}'
          echo ' - ID annotation: ${{ needs.id-annotation.result }}'
          echo ' - Size: ${{ needs.size.result }}'
